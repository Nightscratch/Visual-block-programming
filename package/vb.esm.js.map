{"version":3,"file":"vb.esm.js","sources":["../src/zoom.js","../src/drag.js","../src/blockStyle/move/html.html?raw","../src/blockStyle/move/move.js","../src/blockStyle/ifelse/html.html?raw","../src/blockStyle/ifelse/ifelse.js","../src/blockStyle/start/html.html?raw","../src/blockStyle/start/start.js","../src/blockStyle/text/html.html?raw","../src/blockStyle/text/text.js","../src/blockStyle/number/html.html?raw","../src/blockStyle/number/number.js","../src/blockStyle/equalTo/html.html?raw","../src/blockStyle/equalTo/input.html?raw","../src/blockStyle/equalTo/equalTo.js","../src/blockStyle/index.js","../src/deepClone.js","../src/compiler.js","../src/file/saveFile.js","../src/file/loadFile.js","../src/block.js"],"sourcesContent":["let zoom = 1;\r\n\r\nconst display = ()=>{\r\n    document.getElementById('app').style.zoom = zoom\r\n}\r\n\r\nconst zoomOut = ()=>{\r\n    zoom+=0.5\r\n    if (zoom > 4) {\r\n        zoom = 4\r\n    }\r\n    display()\r\n}\r\n\r\nconst zoomIn = ()=>{\r\n    zoom-=0.5\r\n    if (zoom < 0.5) {\r\n        zoom = 0.5\r\n    }\r\n    display()\r\n\r\n}\r\n\r\ndocument.getElementById(\"zoomIn\").addEventListener(\"click\", zoomIn)\r\ndocument.getElementById(\"zoomOut\").addEventListener(\"click\", zoomOut)\r\n\r\nexport{\r\n    zoom,\r\n}","import { zoom } from \"./zoom\";\r\nlet codeSpace = document.getElementById('app')\r\nlet zoomSpace = document.getElementById('zoom')\r\n\r\nconst dragElement = (elmnt,dragOver,event=false)=>{\r\n    let id;\r\n    let offset;\r\n    let dragMouseDown=(e)=>{\r\n        if (e.target != elmnt && e.target.getAttribute('dragId') != elmnt.getAttribute('blockId')) {\r\n            return true;\r\n        }\r\n        if (e.button == 2) {\r\n            return true;\r\n        }\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        codeSpace.appendChild(elmnt)\r\n        id = elmnt.getAttribute('blockId')\r\n        document.getElementById('screen').style.height = zoomSpace.scrollTop + zoomSpace.offsetHeight - 16  + 'px'\r\n        document.getElementById('screen').style.width = zoomSpace.scrollLeft + zoomSpace.offsetWidth - 16 + 'px'\r\n\r\n        offset = {\r\n            y:e.clientY/ zoom - (elmnt.getBoundingClientRect().y + zoomSpace.scrollTop/ zoom),\r\n            x:e.clientX/ zoom - (elmnt.getBoundingClientRect().x + zoomSpace.scrollLeft/ zoom),\r\n        }\r\n\r\n        document.onmouseup = closeDragElement;\r\n        document.onmousemove = elementDrag;\r\n    }\r\n    let elementDrag=(e)=> {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        elmnt.style.top = (e.clientY / zoom - offset.y) + \"px\";\r\n        elmnt.style.left = (e.clientX / zoom - offset.x) + \"px\";  \r\n        dragOver(id,false)\r\n    }\r\n    let closeDragElement=()=> {\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n        //elmnt.onmousedown = null\r\n        dragOver(id)\r\n        //zdom.remove()\r\n    }\r\n    elmnt.onmousedown = dragMouseDown;\r\n    if (event) {\r\n        dragMouseDown(event)\r\n    }\r\n}\r\n\r\nexport {\r\n    dragElement\r\n}","export default \"<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block\\\">\\r\\n        <p dragId=\\\"blockId\\\">Move(</p>\\r\\n        <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"arg1\\\"></div>\\r\\n        <p dragId=\\\"blockId\\\">,</p>\\r\\n        <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"arg2\\\"></div>\\r\\n        <p dragId=\\\"blockId\\\">)</p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput:'next',\r\n    topOnly:false,\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n            'arg1': {\r\n                type:0,\r\n                value: null\r\n            }  ,\r\n            'arg2': {\r\n                type:0,\r\n                value: null\r\n            },        \r\n            'next': {\r\n                type:1,\r\n                value: null\r\n            },  \r\n        }\r\n    },\r\n    compiler(inputs,blockData){\r\n        return `move(${inputs.arg1},${inputs.arg2});${inputs.next}`\r\n    }\r\n}","export default \"<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block\\\" dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">如果</p>\\r\\n        <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"condition1\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"inline\\\">\\r\\n    <div class=\\\"column\\\"></div>\\r\\n    <div class=\\\"input-transparent\\\" prentId=\\\"blockId\\\" inputId=\\\"do1\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block\\\" dragId=\\\"blockId\\\">\\r\\n        <img class=\\\"right\\\" src=\\\"./images/back.svg\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput:'do1',\r\n    topOnly:false,\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n            'do1':{\r\n                type:1,\r\n                value: null\r\n            },\r\n            'condition1': {\r\n                type:0,\r\n                value: null\r\n            },\r\n            'next': {\r\n                type:1,\r\n                value: null\r\n            },   \r\n        }\r\n    },\r\n    compiler(inputs,blockData){\r\n        return `if (${inputs.condition1}){${inputs.do1}}${inputs.next}`\r\n    }\r\n}\r\n\r\n","export default \"\\r\\n<div class=\\\"block-in\\\">\\r\\n    <div class=\\\"inline-block top-level\\\" dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">当程序启动时</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    isTopLevel:true,\r\n    defaultInput:'next',\r\n    topOnly:true,\r\n\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n            'next': {\r\n                type:1,\r\n                value: null\r\n            },    \r\n        }\r\n    },\r\n    compiler(inputs,blockData){\r\n        return `const start =()=>{${inputs.next}}`\r\n    }\r\n}\r\n\r\n","export default \"<div class=\\\"block-in\\\">\\r\\n    <div class=\\\"inline-block report-only\\\" dragId=\\\"blockId\\\">\\r\\n            <p dragId=\\\"blockId\\\">文本</p>\\r\\n        <div>\\r\\n            <input type=\\\"text\\\" id=\\\"input\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput:null,\r\n    topOnly:true,\r\n\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {   \r\n        }\r\n    },\r\n    initialSelfData:{\r\n        text:'默认文本'\r\n    },\r\n    compiler(inputs,blockData,dom){\r\n        return `\"${dom.querySelector('[id=\"input\"]').value}\"`\r\n    },\r\n    save:{\r\n        toFile(blockData,dom){\r\n            blockData.self.text = dom.querySelector('[id=\"input\"]').value\r\n            return blockData\r\n        },\r\n    },\r\n\r\n    load:{\r\n        initDom(blockData, dom) {\r\n            dom.querySelector('[id=\"input\"]').value = blockData.self.text\r\n            return dom\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","export default \"<div class=\\\"block-in\\\">\\r\\n    <div class=\\\"inline-block report-only\\\"  dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">数字</p>\\r\\n        <div>\\r\\n            <input id=\\\"input\\\" type=\\\"number\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput: null,\r\n    topOnly:true,\r\n\r\n    html(blockId) {\r\n        return html.replace(/blockId/g, blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n        }\r\n    },\r\n    compiler(inputs, blockData, dom) {\r\n        return `${dom.querySelector('[id=\"input\"]').value}`\r\n    },\r\n    initialSelfData:{\r\n        number:123456\r\n    },\r\n    save: {\r\n        toFile(blockData, dom) {\r\n            blockData.self.number = dom.querySelector('[id=\"input\"]').value\r\n            return blockData\r\n        },\r\n    },\r\n    load: {\r\n        initDom(blockData, dom) {\r\n            dom.querySelector('[id=\"input\"]').value = blockData.self.number\r\n            return dom\r\n        }\r\n    }\r\n}\r\n\r\n","export default \"<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block report-only\\\" dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">Array[</p>\\r\\n        <div id=\\\"inputs\\\" group=\\\"blockId\\\" class=\\\"inline\\\">\\r\\n\\r\\n        </div>\\r\\n        <p dragId=\\\"blockId\\\">]</p>\\r\\n        <button id=\\\"add\\\" prentId=\\\"blockId\\\">加</button>\\r\\n        <button id=\\\"subtract\\\" prentId=\\\"blockId\\\">减</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","export default \"\\r\\n\\r\\n<div group=\\\"argId\\\" prentId=\\\"blockId\\\">\\r\\n    <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"argId\\\"></div>, \\r\\n</div>\"","import html from './html.html?raw'\r\nimport inputHtml from './input.html?raw'\r\nimport { deletBlock } from '../../block'\r\n\r\nexport default {\r\n    defaultInput: null,\r\n    topOnly: true,\r\n    html(blockId) {\r\n        return html.replace(/blockId/g, blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n        }\r\n    },\r\n    compiler(inputs, blockData) {\r\n        let arr = ''\r\n        for (const item in inputs) {\r\n            arr += inputs[item] + ','\r\n        }\r\n        return `[${arr}]`\r\n    },\r\n    load:{\r\n        initDom(blockData,dom,blockId,firstTime) {\r\n            // firstTime : 当copy时是false，当load是true\r\n            let addItem = (inputName,change=true)=>{\r\n                let inputDom = document.createElement('template')\r\n                inputDom.innerHTML = inputHtml.replace(/argId/g, inputName).replace(/blockId/g, blockId)\r\n                if (change) {\r\n                    blockData.inputs[inputName] = { type:0, value:null }\r\n                }\r\n                \r\n                dom.querySelector(`[id=\"inputs\"]`).appendChild(inputDom.content)                \r\n            }\r\n            let subtractItem = ()=>{\r\n                let inputKeys = Object.keys(blockData.inputs)\r\n                if (inputKeys.length > 0) {\r\n                    let inputData = blockData.inputs[inputKeys[inputKeys.length-1]]\r\n                    if (inputData.value) {\r\n                        deletBlock(inputData.value.data)\r\n                    }\r\n                    dom.querySelector(`[group=\"${inputKeys[inputKeys.length-1]}\"][prentId=\"${blockId}\"]`).remove()\r\n                    delete blockData.inputs[inputKeys[inputKeys.length-1]]\r\n                }\r\n            }\r\n            if (firstTime) {\r\n                debugger\r\n                dom.querySelector(`[id=\"inputs\"]`).innerHTML = ''\r\n                for (let inputName in blockData.inputs) {\r\n                    addItem(inputName,false)\r\n                }                \r\n            }\r\n\r\n            dom.querySelector(`[id=\"add\"]`).onclick = () => {\r\n                addItem(`item_${Object.keys(blockData.inputs).length + 1}`)\r\n            }\r\n            dom.querySelector(`[id=\"subtract\"]`).onclick = (e) => {\r\n                subtractItem()\r\n            }\r\n        }        \r\n    }\r\n\r\n}","import move from './move/move'\r\nimport ifelse from './ifelse/ifelse'\r\nimport start from './start/start'\r\nimport text from './text/text'\r\nimport number from './number/number'\r\nimport equalTo from './equalTo/equalTo'\r\n\r\n\r\n\r\nexport default{\r\n    move,\r\n    ifelse,\r\n    start,\r\n    text,\r\n    number,\r\n    equalTo\r\n}","export default function deepClone(target) {\r\n    const map = new WeakMap()\r\n    \r\n    function isObject(target) {\r\n        return (typeof target === 'object' && target ) || typeof target === 'function'\r\n    }\r\n\r\n    function clone(data) {\r\n        if (!isObject(data)) {\r\n            return data\r\n        }\r\n        if ([Date, RegExp].includes(data.constructor)) {\r\n            return new data.constructor(data)\r\n        }\r\n        if (typeof data === 'function') {\r\n            return new Function('return ' + data.toString())()\r\n        }\r\n        const exist = map.get(data)\r\n        if (exist) {\r\n            return exist\r\n        }\r\n        if (data instanceof Map) {\r\n            const result = new Map()\r\n            map.set(data, result)\r\n            data.forEach((val, key) => {\r\n                if (isObject(val)) {\r\n                    result.set(key, clone(val))\r\n                } else {\r\n                    result.set(key, val)\r\n                }\r\n            })\r\n            return result\r\n        }\r\n        if (data instanceof Set) {\r\n            const result = new Set()\r\n            map.set(data, result)\r\n            data.forEach(val => {\r\n                if (isObject(val)) {\r\n                    result.add(clone(val))\r\n                } else {\r\n                    result.add(val)\r\n                }\r\n            })\r\n            return result\r\n        }\r\n        const keys = Reflect.ownKeys(data)\r\n        const allDesc = Object.getOwnPropertyDescriptors(data)\r\n        const result = Object.create(Object.getPrototypeOf(data), allDesc)\r\n        map.set(data, result)\r\n        keys.forEach(key => {\r\n            const val = data[key]\r\n            if (isObject(val)) {\r\n                result[key] = clone(val)\r\n            } else {\r\n                result[key] = val\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    return clone(target)\r\n}\r\n","import blockStyle from \"./blockStyle/index\";\r\nvar blocksData = {}\r\n\r\nconst compileBlock = (blockData,blocksId)=>{\r\n    let selfBlockStyle =blockStyle[ blockData.type]\r\n    let inputs = {}\r\n    for (const inputkey in blockData.inputs) {\r\n        let inputData = blockData.inputs[inputkey]\r\n        if (inputData.value) {\r\n            inputs[inputkey] = compileBlock(blocksData[inputData.value.data],inputData.value.data,false)\r\n        }else{\r\n            if (inputkey == 'next') {\r\n                inputs[inputkey] = ''\r\n            }else{\r\n                inputs[inputkey] = 'null'\r\n            }\r\n        }\r\n    }\r\n    return selfBlockStyle.compiler(inputs,blockData,document.querySelector(`[blockid=\"${blocksId}\"]`))\r\n}\r\n\r\nconst compile = (blocksDataInput)=>{\r\n    blocksData = blocksDataInput // load data to compile\r\n    let sourceCode = '' \r\n    for (const blocksId in blocksData) {\r\n        let blockData = blocksData[blocksId]\r\n        if (blockStyle[blockData.type].isTopLevel) {\r\n            sourceCode += compileBlock(blockData,blocksId)\r\n        }\r\n    }\r\n    return sourceCode\r\n}\r\n\r\nexport {\r\n    compile\r\n}","import blockStyle from \"../blockStyle\"\r\n\r\nconst saveFile = (blocksData)=>{\r\n    let file = {}\r\n    for (const blockId in blocksData) {\r\n        let blockData = blocksData[blockId]\r\n        let blockDom = document.querySelector(`[blockid=\"${blockId}\"]`)\r\n        console.log(blockDom)\r\n        let selfBlockStyle = blockStyle[blockData.type]\r\n        if (selfBlockStyle.save && selfBlockStyle.save.toFile) {\r\n            file[blockId] = selfBlockStyle.save.toFile(blockData,blockDom)\r\n        }else{\r\n            file[blockId] = blockData\r\n        }\r\n        file[blockId].x = blockDom.style.left\r\n        file[blockId].y = blockDom.style.top\r\n    }\r\n    return file\r\n}\r\n\r\nexport default saveFile","import blockStyle from \"../blockStyle\"\r\nimport { addBlock, addInputBlock,bindEvent } from \"../block\"\r\nlet blocksDataToChange = {}\r\nlet eventList = []\r\n\r\nconst load = (blockId, blocksDataToLoad, dom) => {\r\n    let blockData = blocksDataToLoad[blockId]\r\n    let selfBlockStyle = blockStyle[blockData.type]\r\n    \r\n    dom.style.left = blockData.x\r\n    dom.style.top = blockData.y\r\n\r\n\r\n    delete blockData.x\r\n    delete blockData.y\r\n\r\n    blocksDataToChange[blockId] = blockData\r\n    if (selfBlockStyle.load && selfBlockStyle.load.initDom) {\r\n        selfBlockStyle.load.initDom(blockData,dom,blockId,true)\r\n    }\r\n    for (const inputKey in blockData.inputs) {\r\n        let inputData = blockData.inputs[inputKey]\r\n        if (inputData.value) {\r\n            let child = addInputBlock(\r\n                blocksDataToLoad[inputData.value.data].type,\r\n                inputData.value.data\r\n            )\r\n            //setDragOut = (e, selfBlockDom, selfBlockId, prentId, targetBlockInputIndex)\r\n            eventList.push({\r\n                selfBlockDom:child,\r\n                selfBlockId:inputData.value.data,\r\n                prentId:blockId,\r\n                targetBlockInputIndex:inputKey\r\n\r\n\r\n            })\r\n\r\n            dom.querySelector(`[inputid=\"${inputKey}\"]`).appendChild(\r\n            load(\r\n                    inputData.value.data,\r\n                    blocksDataToLoad, \r\n                    child\r\n                )\r\n            )\r\n            debugger\r\n        }\r\n    }\r\n    return dom\r\n}\r\n\r\nconst loadFile = (blocksDataToLoad,blocksData) => {\r\n    blocksData = {}\r\n    document.getElementById('app').innerHTML = ''\r\n    blocksDataToChange = {}\r\n    for (const blockId in blocksDataToLoad) {\r\n        console.log(\"sss\", blocksDataToLoad[blockId])\r\n        const blockData = blocksDataToLoad[blockId]\r\n        if (!blockData.prent) {\r\n            debugger\r\n            eventList = []\r\n            bindEvent(load(blockId, blocksDataToLoad, addBlock(blockData.type,false,blockId)),eventList,blockId)\r\n            debugger\r\n        }\r\n    }\r\n}\r\n\r\nexport default loadFile","import {\r\n\tdragElement\r\n} from \"./drag\";\r\nimport blockStyle from \"./blockStyle/index\";\r\nimport deepClone from './deepClone'\r\nimport {\r\n\tzoom\r\n} from \"./zoom\";\r\nimport * as compiler from './compiler'\r\nimport * as file from './file'\r\n\r\n/** @constant { Number } blockMinSpace 积木连接最小距离*/\r\nconst blockMinSpace = 20\r\n/** @constant { HTMLElement } codeSpace 积木编程区 html 对象 */\r\nvar codeSpace = null;\r\n/** @constant { object } blocksData 存储积木数据 */\r\nvar blocksData = {};\r\n/** @constant { object } menu 存储菜单数据 */\r\nvar menu = {};\r\n/** @constant { HTMLElement } menuDom 菜单 html 对象 */\r\nvar menuDom = null;\r\nvar porDom = null;\r\n/**\r\n * @function getMinChild 获取积木输入框的最子元素\r\n * @param { Number } targetBlockId 积木Id \r\n * @param { String } inputId 输入名\r\n * @returns { Number } 最子元素Id\r\n */\r\nexport const getMinChild = (targetBlockId, inputId) => {\r\n\tlet child = targetBlockId\r\n\tif (!blocksData[child].inputs[inputId]) {\r\n\t\treturn targetBlockId\r\n\t}\r\n\twhile (blocksData[child].inputs[inputId].value) {\r\n\t\tchild = blocksData[child].inputs[inputId].value.data\r\n\t}\r\n\treturn Number(child)\r\n}\r\n\r\n/**\r\n * @function setDragOut 设置积木从父积木里拖出来事件\r\n * @param { Number } selfBlockId 积木 Id \r\n * @param { String } prentId 父积木 Id\r\n * @param { String } targetBlockInputIndex 输入名\r\n */\r\nexport const setDragOut = (e, selfBlockId, prentId, targetBlockInputIndex) => {\r\n\tif (e.target.getAttribute('blockid') != selfBlockId && e.target.getAttribute('dragId') != selfBlockId) {\r\n\t\treturn true;\r\n\t}\r\n\te = e || window.e;\r\n\te.preventDefault();\r\n\tif (e.button == 2) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tdelete blocksData[selfBlockId].prent\r\n\tlet selfBlockDom = codeSpace.querySelector(`[blockid=\"${selfBlockId}\"]`)\r\n\tblocksData[prentId].inputs[targetBlockInputIndex].value = null\r\n\tselfBlockDom.style.top = setPostiton(selfBlockDom, 'y') + \"px\";\r\n\tselfBlockDom.style.left = setPostiton(selfBlockDom, 'x') + \"px\";\r\n\tselfBlockDom.setAttribute('class', 'block')\r\n\tcodeSpace.appendChild(selfBlockDom)\r\n\tdragElement(selfBlockDom, connectBlocks, e)\r\n}\r\n\r\n/**\r\n * @function setContext 设置积木右键菜单事件\r\n * @param { Number } e 事件对象\r\n * @param { String } domId 积木 Id\r\n */\r\nexport const setContext = (e, domId) => {\r\n\te = e || window.e;\r\n\te.preventDefault();\r\n\tif (e.target.getAttribute('blockid') != domId && e.target.getAttribute('dragId') != domId) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t//let menuDom = menuDom//document.getElementById('menu')\r\n\tmenuDom.style.display = 'block'\r\n\tmenuDom.style.top = (e.clientY + 5) + \"px\";\r\n\tmenuDom.style.left = (e.clientX + 10) + \"px\";\r\n\tmenu.open = true\r\n\tmenu.target = {\r\n\t\ttype: 1,\r\n\t\tdata: String(domId)\r\n\t}\r\n}\r\n\r\n/**\r\n * @function connectBlocks 检查积木可否连接其他积木并连接\r\n * @param { Number } dragBlockId 积木Id\r\n */\r\nexport const connectBlocks = (dragBlockId, connect = true) => {\r\n\tif (connect) {\r\n\t\tporDom.remove()\r\n\t}\r\n\tlet NowCanConnectBlocks = []\r\n\tlet dragBlockDom = getBlockById(dragBlockId)\r\n\tfor (let targetBlockId in blocksData) {\r\n\t\tlet targetBlockData = blocksData[targetBlockId]\r\n\t\tif (targetBlockId == dragBlockId) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tfor (const dragBlockInputId in blocksData[dragBlockId].inputs) {\r\n\t\t\tif (targetBlockData.topOnly && blocksData[dragBlockId].inputs[dragBlockInputId].type == 1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (blocksData[dragBlockId].inputs[dragBlockInputId].type != 1 || blocksData[targetBlockId].prent) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (dragBlockInputId != 'next' && blocksData[dragBlockId].inputs[dragBlockInputId].value) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tlet targetBlockDom = getBlockById(targetBlockId)\r\n\t\t\tlet dragBlockInputDom = document.querySelector(`[prentId=\"${dragBlockId}\"][inputId=\"${dragBlockInputId}\"]`)\r\n\t\t\tlet distanceX = Math.abs(targetBlockDom.getBoundingClientRect()\r\n\t\t\t\t.left - dragBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.left)\r\n\t\t\tlet distanceY = Math.abs(targetBlockDom.getBoundingClientRect()\r\n\t\t\t\t.top - dragBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.top)\r\n\t\t\tlet type = 1\r\n\r\n\t\t\tif (distanceY < blockMinSpace && distanceX < blockMinSpace) {\r\n\t\t\t\tNowCanConnectBlocks.push({\r\n\t\t\t\t\tdistance: distanceX + distanceY,\r\n\t\t\t\t\ttargetBlockId,\r\n\t\t\t\t\ttargetBlockDom,\r\n\t\t\t\t\tdragBlockInputId,\r\n\t\t\t\t\ttype\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const targetBlockInputIndex in targetBlockData.inputs) {\r\n\t\t\tif (!blocksData[dragBlockId].defaultInput && targetBlockData.inputs[targetBlockInputIndex].type == 1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (blocksData[dragBlockId].topOnly && targetBlockData.inputs[targetBlockInputIndex].type == 1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\tlet targetBlockInputDom = document.querySelector(`[prentId=\"${targetBlockId}\"][inputId=\"${targetBlockInputIndex}\"]`)\r\n\t\t\tlet distanceX = Math.abs(targetBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.left - dragBlockDom.getBoundingClientRect()\r\n\t\t\t\t.left)\r\n\t\t\tlet distanceY = Math.abs(targetBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.top - dragBlockDom.getBoundingClientRect()\r\n\t\t\t\t.top)\r\n\t\t\tif (distanceX < blockMinSpace && distanceY < blockMinSpace) {\r\n\t\t\t\tNowCanConnectBlocks.push({\r\n\t\t\t\t\tdistance: distanceX + distanceY,\r\n\t\t\t\t\ttargetBlockId,\r\n\t\t\t\t\ttargetBlockInputIndex,\r\n\t\t\t\t\ttargetBlockInputDom,\r\n\t\t\t\t\ttype: 0\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (NowCanConnectBlocks.length == 0) {\r\n\t\tporDom.remove()\r\n\t\treturn null\r\n\t}\r\n\tNowCanConnectBlocks.sort((a, b) => {\r\n\t\treturn a.distance - b.distance\r\n\t});\r\n\tlet NowCanConnectBlock = NowCanConnectBlocks[0]\r\n\t//console.log(\"connect\",NowCanConnectBlock)\r\n\t/*if (! connect) {\r\n\t    return NowCanConnectBlock\r\n\t}*/\r\n\r\n\tif (NowCanConnectBlock.type == 0) {\r\n\t\tlet {\r\n\t\t\ttargetBlockId,\r\n\t\t\ttargetBlockInputIndex,\r\n\t\t\ttargetBlockInputDom,\r\n\t\t} = NowCanConnectBlock\r\n\r\n\t\tif (blocksData[targetBlockId].inputs[targetBlockInputIndex].value) { // 输入口已有积木\r\n\t\t\tlet oldBlockId = blocksData[targetBlockId].inputs[targetBlockInputIndex].value.data // 已有积木的ID\r\n\t\t\tlet oldBlockDom = getBlockById(oldBlockId) // 已有积木的dom\r\n\t\t\tlet minChildId = getMinChild(dragBlockId, 'next') // 拖动积木的最子积木\r\n\r\n\t\t\tif (targetBlockInputIndex == 'next') {\r\n\t\t\t\tlet defaultInput = blocksData[dragBlockId].defaultInput // 拖动积木的默认输入口\r\n\r\n\t\t\t\tif (!connect) {\r\n\t\t\t\t\ttargetBlockInputDom.insertBefore(porDom, targetBlockInputDom.childNodes[0])\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (defaultInput != 'next' && !blocksData[dragBlockId].inputs[defaultInput].value) {\r\n\t\t\t\t\t// 默认输入口无积木\r\n\t\t\t\t\tdocument.querySelector(`[prentId=\"${dragBlockId}\"][inputId=\"${defaultInput}\"]`)\r\n\t\t\t\t\t\t.appendChild(oldBlockDom)\r\n\t\t\t\t\tblocksData[dragBlockId].inputs[defaultInput].value = {\r\n\t\t\t\t\t\ttype: 1,\r\n\t\t\t\t\t\tdata: oldBlockId\r\n\t\t\t\t\t}\r\n\t\t\t\t\tblocksData[oldBlockId].prent = {\r\n\t\t\t\t\t\tinputId: defaultInput,\r\n\t\t\t\t\t\tblockId: dragBlockId\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldBlockDom.onmousedown = (e) => {\r\n\t\t\t\t\t\tsetDragOut(e, oldBlockId, dragBlockId, defaultInput)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 默认输入口有积木\r\n\t\t\t\t\tdocument.querySelector(`[prentId=\"${minChildId}\"][inputId=\"next\"]`)\r\n\t\t\t\t\t\t.appendChild(oldBlockDom)\r\n\t\t\t\t\tblocksData[minChildId].inputs.next.value = {\r\n\t\t\t\t\t\ttype: 1,\r\n\t\t\t\t\t\tdata: oldBlockId\r\n\t\t\t\t\t}\r\n\t\t\t\t\tblocksData[oldBlockId].prent = {\r\n\t\t\t\t\t\tinputId: 'next',\r\n\t\t\t\t\t\tblockId: minChildId\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldBlockDom.onmousedown = (e) => {\r\n\t\t\t\t\t\tsetDragOut(e, oldBlockId, minChildId, 'next')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (blocksData[oldBlockId].defaultInput) {\r\n\t\t\t\t\tif (blocksData[dragBlockId].defaultInput) {\r\n\r\n\t\t\t\t\t\tif (!connect) {\r\n\t\t\t\t\t\t\ttargetBlockInputDom.insertBefore(porDom, targetBlockInputDom.childNodes[0])\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet defaultInput = blocksData[dragBlockId].defaultInput\r\n\t\t\t\t\t\tlet prentId;\r\n\t\t\t\t\t\tif (defaultInput == 'next') {\r\n\t\t\t\t\t\t\tprentId = minChildId //dragBlockId\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (blocksData[dragBlockId].inputs[defaultInput].value) {\r\n\t\t\t\t\t\t\t\t// 默认输入有积木\r\n\t\t\t\t\t\t\t\tprentId = minChildId\r\n\t\t\t\t\t\t\t\tdefaultInput = 'next'\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// 默认输入唔积木\r\n\t\t\t\t\t\t\t\tprentId = dragBlockId\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdocument.querySelector(`[prentId=\"${prentId}\"][inputId=\"${defaultInput}\"]`)\r\n\t\t\t\t\t\t\t.appendChild(oldBlockDom)\r\n\r\n\t\t\t\t\t\tblocksData[prentId].inputs[defaultInput].value = {\r\n\t\t\t\t\t\t\tdata: oldBlockId,\r\n\t\t\t\t\t\t\ttype: 1\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tblocksData[oldBlockId].prent = {\r\n\t\t\t\t\t\t\tinputId: defaultInput,\r\n\t\t\t\t\t\t\tblockId: prentId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toldBlockDom.onmousedown = (e) => {\r\n\t\t\t\t\t\t\tsetDragOut(e, oldBlockId, prentId, defaultInput)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!connect) {\r\n\t\t\t\t\t\t\ttargetBlockInputDom.append(porDom)\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toldBlockDom.style.top = setPostiton(oldBlockDom, 'y') + 20 + \"px\";\r\n\t\t\t\t\t\toldBlockDom.style.left = setPostiton(oldBlockDom, 'x') + 20 + \"px\";\r\n\t\t\t\t\t\tcodeSpace.appendChild(oldBlockDom)\r\n\t\t\t\t\t\tdelete blocksData[oldBlockId].prent\r\n\t\t\t\t\t\toldBlockDom.setAttribute('class', 'block')\r\n\t\t\t\t\t\tdragElement(oldBlockDom, connectBlocks)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!connect) {\r\n\t\t\t\t\t\ttargetBlockInputDom.append(porDom)\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldBlockDom.style.top = setPostiton(oldBlockDom, 'y') + 20 + \"px\";\r\n\t\t\t\t\toldBlockDom.style.left = setPostiton(oldBlockDom, 'x') + 20 + \"px\";\r\n\t\t\t\t\tcodeSpace.appendChild(oldBlockDom)\r\n\t\t\t\t\tdelete blocksData[oldBlockId].prent\r\n\t\t\t\t\toldBlockDom.setAttribute('class', 'block')\r\n\t\t\t\t\tdragElement(oldBlockDom, connectBlocks)\r\n\t\t\t\t}\r\n\t\t\t\tdebugger\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tdebugger\r\n\t\tif (!connect) {\r\n\t\t\ttargetBlockInputDom.append(porDom)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tblocksData[targetBlockId].inputs[targetBlockInputIndex].value = {\r\n\t\t\ttype: 1,\r\n\t\t\tdata: dragBlockId\r\n\t\t}\r\n\t\tblocksData[dragBlockId].prent = {\r\n\t\t\tblockId: targetBlockId,\r\n\t\t\tinputId: targetBlockInputIndex\r\n\t\t}\r\n\r\n\t\ttargetBlockInputDom.appendChild(dragBlockDom)\r\n\t\tdragBlockDom.setAttribute('class', 'block-input')\r\n\t\tdragBlockDom.onmousedown = (e) => {\r\n\t\t\tsetDragOut(e, dragBlockId, targetBlockId, targetBlockInputIndex)\r\n\t\t}\r\n\t} else if (NowCanConnectBlock.type == 1) {\r\n\t\tlet {\r\n\t\t\ttargetBlockId,\r\n\t\t\ttargetBlockDom,\r\n\t\t\tdragBlockInputId\r\n\t\t} = NowCanConnectBlock\r\n\t\tlet dragBlockInputDom = document.querySelector(`[prentId=\"${dragBlockId}\"][inputId=\"${dragBlockInputId}\"]`)\r\n\t\tif (!connect) {\r\n\t\t\tdragBlockInputDom.append(porDom)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tdragBlockInputDom.append(targetBlockDom)\r\n\r\n\r\n\t\tblocksData[targetBlockId].prent = {\r\n\t\t\tblockId: dragBlockId,\r\n\t\t\tinputId: dragBlockInputId\r\n\t\t}\r\n\t\tblocksData[dragBlockId].inputs[dragBlockInputId].value = {\r\n\t\t\ttype: 1,\r\n\t\t\tdata: targetBlockId\r\n\t\t}\r\n\t\ttargetBlockDom.setAttribute('class', 'block-input')\r\n\t\ttargetBlockDom.onmousedown = (e) => {\r\n\t\t\tsetDragOut(e, targetBlockId, dragBlockId, dragBlockInputId)\r\n\t\t}\r\n\t}\r\n\r\n\treturn null\r\n}\r\n/**\r\n * @function createBlockDomById 创建一个积木\r\n * @param { String } type 积木类型\r\n * @param { Number } dragBlockId 积木Id\r\n */\r\nconst createBlockDomById = (type, id) => {\r\n\tlet dom = document.createElement(\"div\");\r\n\tdom.setAttribute('blockId', `${id}`)\r\n\tdom.setAttribute('class', 'block')\r\n\tdom.innerHTML = blockStyle[type].html(id)\r\n\treturn dom\r\n}\r\n/**\r\n * 创建一个积木\r\n * @function createBlockDom 创建一个积木\r\n * @param { String } type 积木类型\r\n * @return { HTMLDivElement } 创建积木\r\n */\r\nconst createBlockDom = (type, id = Object.keys(blocksData)\r\n\t.length) => {\r\n\tlet dom = document.createElement(\"div\");\r\n\tdom.setAttribute('blockId', `${id}`)\r\n\tdom.setAttribute('class', 'block')\r\n\tdom.innerHTML = blockStyle[type].html(id)\r\n\treturn dom\r\n}\r\n\r\n/**\r\n * @function addInputBlock 创建一个有父的积木\r\n * @param { String } type 积木类型\r\n * @param { String } id 积木 id\r\n */\r\nexport const addInputBlock = (type, id = Object.keys(blocksData)\r\n\t.length) => {\r\n\tlet dom = createBlockDom(type, id)\r\n\tdom.setAttribute('class', 'input-block')\r\n\treturn dom\r\n}\r\n\r\n/**\r\n * @function addBlock 创建一个积木\r\n * @param { String } type 积木类型\r\n * @param { boolean } changeBlocksData 是否修改\r\n * @param { String } id 积木 id\r\n */\r\nexport const addBlock = (type, changeBlocksData = true, id) => {\r\n\r\n\tlet dom;\r\n\tif (changeBlocksData) {\r\n\t\tdom = createBlockDom(type)\r\n\t} else {\r\n\t\tdom = createBlockDom(type, id)\r\n\t}\r\n\tcodeSpace.appendChild(dom);\r\n\tif (changeBlocksData) {\r\n\t\tdragElement(dom, connectBlocks)\r\n\t\tlet domId = Object.keys(blocksData)\r\n\t\t\t.length\r\n\t\tdom.oncontextmenu = (e) => {\r\n\t\t\tsetContext(e, domId)\r\n\t\t}\r\n\r\n\t\tblocksData[domId] = {\r\n\t\t\ttype,\r\n\t\t\tinputs: blockStyle[type].inputs(),\r\n\t\t\tdefaultInput: blockStyle[type].defaultInput,\r\n\t\t\ttopOnly: blockStyle[type].topOnly,\r\n\t\t}\r\n        if (blockStyle[type].initialSelfData) {\r\n            blocksData[domId].self = blockStyle[type].initialSelfData\r\n        }else{\r\n            blocksData[domId].self = {}\r\n        }\r\n\t\tinitDom(dom, domId, type, true)\r\n\t}\r\n\treturn dom\r\n}\r\n\r\nconst initDom = (dom, domId, type) => {\r\n\tif (blockStyle[type].load && blockStyle[type].load.initDom) {\r\n\t\tblockStyle[type].load.initDom(blocksData[domId], dom, domId, false)\r\n\t}\r\n}\r\n\r\n/**\r\n * @function getAllChildBlock 获取该积木的所有子\r\n * @param { Number } tagetBlockId 积木id\r\n * @return { number[] } 子积木id\r\n */\r\nexport const getAllChildBlock = (tagetBlockId) => {\r\n\tlet res = []\r\n\tfor (const inputKey in blocksData[tagetBlockId].inputs) {\r\n\t\tlet inputData = blocksData[tagetBlockId].inputs[inputKey]\r\n\t\tif (inputData.value) {\r\n\t\t\tif (inputData.value) {\r\n\r\n\t\t\t\tres.push(inputData.value.data)\r\n\t\t\t\tres = res.concat(getAllChildBlock(inputData.value.data))\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn res\r\n}\r\n\r\n/**\r\n * @function deletBlock 删除积木\r\n * @param { Number } deletBlock 积木 id\r\n */\r\nexport const deletBlock = (targetBlockId) => {\r\n\tgetBlockById(targetBlockId)\r\n\t\t.remove()\r\n\r\n\tif (blocksData[targetBlockId].prent) {\r\n\t\tblocksData[blocksData[targetBlockId].prent.blockId].inputs[blocksData[targetBlockId].prent.inputId].value = null\r\n\t}\r\n\r\n\tlet data = getAllChildBlock(targetBlockId)\r\n\tfor (const delBlockId of data) {\r\n\t\tdelete blocksData[delBlockId]\r\n\t}\r\n\tdelete blocksData[targetBlockId]\r\n}\r\n\r\n/**\r\n * @function setPostiton 通过在页面的绝对位置设置位置偏移\r\n * @param { Number } deletBlock 积木 id\r\n * @param { String } attribute 方向\r\n * @param { HTMLElement } dom 积木对象\r\n */\r\nconst setPostiton = (dom, attribute) => {\r\n\tif (attribute == 'x') {\r\n\t\treturn dom.getBoundingClientRect()\r\n\t\t\t.x - codeSpace.getBoundingClientRect()\r\n\t\t\t.x + document.getElementById('zoom')\r\n\t\t\t.scrollLeft / zoom\r\n\t} else {\r\n\t\treturn dom.getBoundingClientRect()\r\n\t\t\t.y - codeSpace.getBoundingClientRect()\r\n\t\t\t.y + document.getElementById('zoom')\r\n\t\t\t.scrollTop / zoom\r\n\t}\r\n}\r\n/**\r\n * @function copyBlock 复制积木\r\n * @param { Number } targetBlockId 积木 id\r\n */\r\nconst copyBlock = (targetBlockId) => {\r\n\tlet data = getAllChildBlock(targetBlockId)\r\n\tlet baseId = Number(Object.keys(blocksData)[Object.keys(blocksData)\r\n\t\t.length - 1]) + 1 //Object.keys(blocksData).length+1\r\n\tdata.unshift(targetBlockId)\r\n\tlet targetBlockToCopy = document.querySelector(`[blockid=\"${targetBlockId}\"]`)\r\n\tlet newBlockDom = targetBlockToCopy.cloneNode(true)\r\n\r\n\tnewBlockDom.style.left = setPostiton(targetBlockToCopy, 'x') + 10 + 'px'\r\n\tnewBlockDom.style.top = setPostiton(targetBlockToCopy, 'y') + 10 + 'px'\r\n\r\n\tcodeSpace.appendChild(newBlockDom)\r\n\tfor (const blockIdToCopy of data) {\r\n\t\tlet toCopyData = blocksData[blockIdToCopy]\r\n\t\tlet newData = deepClone(toCopyData)\r\n\r\n\r\n\t\tblocksData[String(Number(blockIdToCopy) + baseId)] = newData\r\n\t\t//blocksData.blockId = String(Number(blockIdToCopy) + baseId)\r\n\t\tif (blockStyle[toCopyData.type].save && blockStyle[toCopyData.type].save.toFile) {\r\n\t\t\tblockStyle[toCopyData.type].save.toFile(newData, newBlockDom)\r\n\t\t}\r\n\t\tlet newBlock = blocksData[String(Number(blockIdToCopy) + baseId)]\r\n\r\n\t\tlet domToQuery = document.createElement(\"div\");\r\n\t\tdomToQuery.appendChild(newBlockDom.cloneNode(true))\r\n\r\n\t\tlet change = (Attribute, AttributeName, callBack = () => {}) => {\r\n\t\t\tlet newBlockDomToChange = newBlockDom.querySelectorAll(Attribute)[0]\r\n\t\t\tif (!newBlockDomToChange) {\r\n\t\t\t\tnewBlockDomToChange = newBlockDom\r\n\t\t\t}\r\n\t\t\tnewBlockDomToChange.setAttribute(AttributeName, String(Number(blockIdToCopy) + baseId))\r\n\t\t\tcallBack(newBlockDomToChange)\r\n\t\t}\r\n\t\tlet changeMultiple = (Attribute, AttributeName) => {\r\n\t\t\tlet newBlockDomToChanges = newBlockDom.querySelectorAll(Attribute)\r\n\t\t\tfor (let newBlockDomToChange of newBlockDomToChanges) {\r\n\t\t\t\tnewBlockDomToChange.setAttribute(AttributeName, String(Number(blockIdToCopy) + baseId))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newBlock.prent) {\r\n\t\t\tblocksData[String(Number(blockIdToCopy) + baseId)].prent.blockId = String(Number(blocksData[String(Number(blockIdToCopy) + baseId)].prent.blockId) + baseId)\r\n\t\t}\r\n\r\n\t\tchange(`[blockid=\"${blockIdToCopy}\"]`, 'blockid', (newBlockDomToChange) => {\r\n\t\t\tdebugger\r\n\t\t\tlet data = blocksData[String(Number(blockIdToCopy) + baseId)]\r\n\r\n\t\t\tif (blockIdToCopy == targetBlockId) {\r\n\t\t\t\tnewBlockDomToChange.setAttribute('class', 'block')\r\n\t\t\t\tdragElement(newBlockDomToChange, connectBlocks)\r\n\t\t\t} else {\r\n\t\t\t\tnewBlockDomToChange.onmousedown = (e) => {\r\n\t\t\t\t\tsetDragOut(e, String(Number(blockIdToCopy) + baseId), data.prent.blockId, data.prent.inputId)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//console.log(newBlockDomToChange,String(Number(blockIdToCopy) + baseId),data.type)\r\n\t\t\tinitDom(newBlockDomToChange, String(Number(blockIdToCopy) + baseId), data.type, false)\r\n\t\t\tnewBlockDomToChange.oncontextmenu = (e) => {\r\n\t\t\t\tsetContext(e, String(Number(blockIdToCopy) + baseId))\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tchangeMultiple(`[dragid=\"${blockIdToCopy}\"]`, 'dragid')\r\n\t\tfor (const inputKey in newBlock.inputs) {\r\n\t\t\tchangeMultiple(`[prentid=\"${blockIdToCopy}\"][inputId=\"${inputKey}\"]`, 'prentid')\r\n\t\t\tchangeMultiple(`[prentid=\"${blockIdToCopy}\"][group=\"${inputKey}\"]`, 'prentid')\r\n\r\n\t\t\tif (newBlock.inputs[inputKey].value) {\r\n\t\t\t\tnewBlock.inputs[inputKey].value.data = String(Number(newBlock.inputs[inputKey].value.data) + baseId)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * @function bindEvent 绑定事件\r\n * @param { object } eventList 事件\r\n * @param { Number } blockId 积木 id\r\n * @param { HTMLElement } dom 积木对象\r\n */\r\nexport const bindEvent = (dom, eventList, blockId) => {\r\n\t// only for toplevel\r\n\tdragElement(dom, connectBlocks)\r\n\tdom.oncontextmenu = (e) => {\r\n\t\tsetContext(e, blockId)\r\n\t}\r\n\tfor (const aevent of eventList) {\r\n\t\taevent.selfBlockDom.onmousedown = (e) => {\r\n\t\t\tsetDragOut(e, aevent.selfBlockId, aevent.prentId, aevent.targetBlockInputIndex)\r\n\t\t}\r\n\t\taevent.selfBlockDom.oncontextmenu = (e) => {\r\n\t\t\tsetContext(e, aevent.selfBlockId)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @function getBlockById 通过积木Id 获取积木元素\r\n * @param { Number } tid 积木 id\r\n * @return { HTMLElement } 积木元素\r\n */\r\nconst getBlockById = (tid) => {\r\n\treturn document.querySelector(`[blockId=\"${tid}\"]`)\r\n}\r\n\r\n/**\r\n * @function closeMenu 关闭菜单\r\n */\r\nconst closeMenu = () => {\r\n\tmenuDom.style.display = 'none'\r\n\tmenu.open = false\r\n}\r\n\r\n/**\r\n * @function init 初始化\r\n * @param { HTMLElement } codeSpaceDom 工作区元素\r\n */\r\nexport const init = (codeSpaceDom) => {\r\n\tmenuDom = document.getElementById('menu')\r\n\tcodeSpace = codeSpaceDom //document.getElementById('app')\r\n\tblocksData = {}\r\n\tmenu = {}\r\n\tporDom = document.getElementById('porDom');\r\n\tporDom.remove()\r\n\tcodeSpace.onmousedown = (e) => {\r\n\t\tif (e.target.getAttribute('id') == 'menuItem') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcloseMenu()\r\n\t}\r\n\r\n\tdocument.getElementById(\"menuCopy\")\r\n\t\t.addEventListener(\"click\", () => {\r\n\t\t\tcopyBlock(menu.target.data)\r\n\t\t\tcloseMenu()\r\n\t\t})\r\n\tdocument.getElementById(\"menuDelet\")\r\n\t\t.addEventListener(\"click\", () => {\r\n\t\t\tdeletBlock(menu.target.data)\r\n\t\t\tcloseMenu()\r\n\t\t})\r\n}\r\n\r\n/**\r\n * @exports loadFile\r\n */\r\nexport const loadFile = (projectJson) => {\r\n\tfile.loadFile(projectJson, blocksData)\r\n}\r\n/**\r\n * @exports saveFile\r\n */\r\nexport const saveFile = () => {\r\n\treturn file.saveFile(blocksData)\r\n}\r\n/**\r\n * @exports compile\r\n */\r\nexport const compile = () => {\r\n\treturn compiler.compile(blocksData)\r\n}\r\n//"],"names":["zoom","display","zoomOut","zoomIn","codeSpace","zoomSpace","dragElement","elmnt","dragOver","event","id","offset","dragMouseDown","e","closeDragElement","elementDrag","html$5","move","blockId","html","inputs","blockData","html$4","ifelse","html$3","start","html$2","text","dom","html$1","number","inputHtml","equalTo","arr","item","firstTime","addItem","inputName","change","inputDom","subtractItem","inputKeys","inputData","deletBlock","blockStyle","deepClone","target","map","isObject","clone","data","exist","result","val","key","keys","allDesc","blocksData","compileBlock","blocksId","selfBlockStyle","inputkey","compile","blocksDataInput","sourceCode","saveFile","file","blockDom","blocksDataToChange","eventList","load","blocksDataToLoad","inputKey","child","addInputBlock","loadFile","bindEvent","addBlock","blockMinSpace","menu","menuDom","porDom","getMinChild","targetBlockId","inputId","setDragOut","selfBlockId","prentId","targetBlockInputIndex","selfBlockDom","setPostiton","connectBlocks","setContext","domId","dragBlockId","connect","NowCanConnectBlocks","dragBlockDom","getBlockById","targetBlockData","dragBlockInputId","targetBlockDom","dragBlockInputDom","distanceX","distanceY","type","targetBlockInputDom","a","b","NowCanConnectBlock","oldBlockId","oldBlockDom","minChildId","defaultInput","createBlockDom","changeBlocksData","initDom","getAllChildBlock","tagetBlockId","res","delBlockId","attribute","copyBlock","baseId","targetBlockToCopy","newBlockDom","blockIdToCopy","toCopyData","newData","newBlock","Attribute","AttributeName","callBack","newBlockDomToChange","changeMultiple","newBlockDomToChanges","aevent","tid","closeMenu","init","codeSpaceDom","projectJson","file.loadFile","file.saveFile","compiler.compile"],"mappings":"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"}