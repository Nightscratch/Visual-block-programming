{"version":3,"file":"vb.cjs.js","sources":["../src/zoom.js","../src/drag.js","../src/blockStyle/move/html.html?raw","../src/blockStyle/move/move.js","../src/blockStyle/ifelse/html.html?raw","../src/blockStyle/ifelse/ifelse.js","../src/blockStyle/start/html.html?raw","../src/blockStyle/start/start.js","../src/blockStyle/text/html.html?raw","../src/blockStyle/text/text.js","../src/blockStyle/number/html.html?raw","../src/blockStyle/number/number.js","../src/blockStyle/equalTo/html.html?raw","../src/blockStyle/equalTo/input.html?raw","../src/blockStyle/equalTo/equalTo.js","../src/blockStyle/index.js","../src/deepClone.js","../src/compiler.js","../src/file/saveFile.js","../src/file/loadFile.js","../src/block.js"],"sourcesContent":["let zoom = 1;\r\n\r\nconst display = ()=>{\r\n    document.getElementById('app').style.zoom = zoom\r\n}\r\n\r\nconst zoomOut = ()=>{\r\n    zoom+=0.5\r\n    if (zoom > 4) {\r\n        zoom = 4\r\n    }\r\n    display()\r\n}\r\n\r\nconst zoomIn = ()=>{\r\n    zoom-=0.5\r\n    if (zoom < 0.5) {\r\n        zoom = 0.5\r\n    }\r\n    display()\r\n\r\n}\r\n\r\ndocument.getElementById(\"zoomIn\").addEventListener(\"click\", zoomIn)\r\ndocument.getElementById(\"zoomOut\").addEventListener(\"click\", zoomOut)\r\n\r\nexport{\r\n    zoom,\r\n}","import { zoom } from \"./zoom\";\r\nlet codeSpace = document.getElementById('app')\r\nlet zoomSpace = document.getElementById('zoom')\r\n\r\nconst dragElement = (elmnt,dragOver,event=false)=>{\r\n    let id;\r\n    let offset;\r\n    let dragMouseDown=(e)=>{\r\n        if (e.target != elmnt && e.target.getAttribute('dragId') != elmnt.getAttribute('blockId')) {\r\n            return true;\r\n        }\r\n        if (e.button == 2) {\r\n            return true;\r\n        }\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        codeSpace.appendChild(elmnt)\r\n        id = elmnt.getAttribute('blockId')\r\n        document.getElementById('screen').style.height = zoomSpace.scrollTop + zoomSpace.offsetHeight - 16  + 'px'\r\n        document.getElementById('screen').style.width = zoomSpace.scrollLeft + zoomSpace.offsetWidth - 16 + 'px'\r\n\r\n        offset = {\r\n            y:e.clientY/ zoom - (elmnt.getBoundingClientRect().y + zoomSpace.scrollTop/ zoom),\r\n            x:e.clientX/ zoom - (elmnt.getBoundingClientRect().x + zoomSpace.scrollLeft/ zoom),\r\n        }\r\n\r\n        document.onmouseup = closeDragElement;\r\n        document.onmousemove = elementDrag;\r\n    }\r\n    let elementDrag=(e)=> {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        elmnt.style.top = (e.clientY / zoom - offset.y) + \"px\";\r\n        elmnt.style.left = (e.clientX / zoom - offset.x) + \"px\";  \r\n        dragOver(id,false)\r\n    }\r\n    let closeDragElement=()=> {\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n        //elmnt.onmousedown = null\r\n        dragOver(id)\r\n        //zdom.remove()\r\n    }\r\n    elmnt.onmousedown = dragMouseDown;\r\n    if (event) {\r\n        dragMouseDown(event)\r\n    }\r\n}\r\n\r\nexport {\r\n    dragElement\r\n}","export default \"<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block\\\">\\r\\n        <p dragId=\\\"blockId\\\">Move(</p>\\r\\n        <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"arg1\\\"></div>\\r\\n        <p dragId=\\\"blockId\\\">,</p>\\r\\n        <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"arg2\\\"></div>\\r\\n        <p dragId=\\\"blockId\\\">)</p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput:'next',\r\n    topOnly:false,\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n            'arg1': {\r\n                type:0,\r\n                value: null\r\n            }  ,\r\n            'arg2': {\r\n                type:0,\r\n                value: null\r\n            },        \r\n            'next': {\r\n                type:1,\r\n                value: null\r\n            },  \r\n        }\r\n    },\r\n    compiler(inputs,blockData){\r\n        return `move(${inputs.arg1},${inputs.arg2});${inputs.next}`\r\n    }\r\n}","export default \"<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block\\\" dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">如果</p>\\r\\n        <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"condition1\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"inline\\\">\\r\\n    <div class=\\\"column\\\"></div>\\r\\n    <div class=\\\"input-transparent\\\" prentId=\\\"blockId\\\" inputId=\\\"do1\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block\\\" dragId=\\\"blockId\\\">\\r\\n        <img class=\\\"right\\\" src=\\\"./images/back.svg\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput:'do1',\r\n    topOnly:false,\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n            'do1':{\r\n                type:1,\r\n                value: null\r\n            },\r\n            'condition1': {\r\n                type:0,\r\n                value: null\r\n            },\r\n            'next': {\r\n                type:1,\r\n                value: null\r\n            },   \r\n        }\r\n    },\r\n    compiler(inputs,blockData){\r\n        return `if (${inputs.condition1}){${inputs.do1}}${inputs.next}`\r\n    }\r\n}\r\n\r\n","export default \"\\r\\n<div class=\\\"block-in\\\">\\r\\n    <div class=\\\"inline-block top-level\\\" dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">当程序启动时</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    isTopLevel:true,\r\n    defaultInput:'next',\r\n    topOnly:true,\r\n\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n            'next': {\r\n                type:1,\r\n                value: null\r\n            },    \r\n        }\r\n    },\r\n    compiler(inputs,blockData){\r\n        return `const start =()=>{${inputs.next}}`\r\n    }\r\n}\r\n\r\n","export default \"<div class=\\\"block-in\\\">\\r\\n    <div class=\\\"inline-block report-only\\\" dragId=\\\"blockId\\\">\\r\\n            <p dragId=\\\"blockId\\\">文本</p>\\r\\n        <div>\\r\\n            <input type=\\\"text\\\" id=\\\"input\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput:null,\r\n    topOnly:true,\r\n\r\n    html(blockId){\r\n        return html.replace(/blockId/g,blockId)\r\n    },\r\n    inputs() {\r\n        return {   \r\n        }\r\n    },\r\n    initialSelfData:{\r\n        text:'默认文本'\r\n    },\r\n    compiler(inputs,blockData,dom){\r\n        return `\"${dom.querySelector('[id=\"input\"]').value}\"`\r\n    },\r\n    save:{\r\n        toFile(blockData,dom){\r\n            blockData.self.text = dom.querySelector('[id=\"input\"]').value\r\n            return blockData\r\n        },\r\n    },\r\n\r\n    load:{\r\n        initDom(blockData, dom) {\r\n            dom.querySelector('[id=\"input\"]').value = blockData.self.text\r\n            return dom\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","export default \"<div class=\\\"block-in\\\">\\r\\n    <div class=\\\"inline-block report-only\\\"  dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">数字</p>\\r\\n        <div>\\r\\n            <input id=\\\"input\\\" type=\\\"number\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import html from './html.html?raw'\r\n\r\nexport default {\r\n    defaultInput: null,\r\n    topOnly:true,\r\n\r\n    html(blockId) {\r\n        return html.replace(/blockId/g, blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n        }\r\n    },\r\n    compiler(inputs, blockData, dom) {\r\n        return `${dom.querySelector('[id=\"input\"]').value}`\r\n    },\r\n    initialSelfData:{\r\n        number:123456\r\n    },\r\n    save: {\r\n        toFile(blockData, dom) {\r\n            blockData.self.number = dom.querySelector('[id=\"input\"]').value\r\n            return blockData\r\n        },\r\n    },\r\n    load: {\r\n        initDom(blockData, dom) {\r\n            dom.querySelector('[id=\"input\"]').value = blockData.self.number\r\n            return dom\r\n        }\r\n    }\r\n}\r\n\r\n","export default \"<div class=\\\"block-in\\\" dragId=\\\"blockId\\\">\\r\\n    <div class=\\\"inline-block report-only\\\" dragId=\\\"blockId\\\">\\r\\n        <p dragId=\\\"blockId\\\">Array[</p>\\r\\n        <div id=\\\"inputs\\\" group=\\\"blockId\\\" class=\\\"inline\\\">\\r\\n\\r\\n        </div>\\r\\n        <p dragId=\\\"blockId\\\">]</p>\\r\\n        <button id=\\\"add\\\" prentId=\\\"blockId\\\">加</button>\\r\\n        <button id=\\\"subtract\\\" prentId=\\\"blockId\\\">减</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div prentId=\\\"blockId\\\" inputId=\\\"next\\\"></div>\"","export default \"\\r\\n\\r\\n<div group=\\\"argId\\\" prentId=\\\"blockId\\\">\\r\\n    <div class=\\\"input\\\" prentId=\\\"blockId\\\" inputId=\\\"argId\\\"></div>, \\r\\n</div>\"","import html from './html.html?raw'\r\nimport inputHtml from './input.html?raw'\r\nimport { deletBlock } from '../../block'\r\n\r\nexport default {\r\n    defaultInput: null,\r\n    topOnly: true,\r\n    html(blockId) {\r\n        return html.replace(/blockId/g, blockId)\r\n    },\r\n    inputs() {\r\n        return {\r\n        }\r\n    },\r\n    compiler(inputs, blockData) {\r\n        let arr = ''\r\n        for (const item in inputs) {\r\n            arr += inputs[item] + ','\r\n        }\r\n        return `[${arr}]`\r\n    },\r\n    load:{\r\n        initDom(blockData,dom,blockId,firstTime) {\r\n            // firstTime : 当copy时是false，当load是true\r\n            let addItem = (inputName,change=true)=>{\r\n                let inputDom = document.createElement('template')\r\n                inputDom.innerHTML = inputHtml.replace(/argId/g, inputName).replace(/blockId/g, blockId)\r\n                if (change) {\r\n                    blockData.inputs[inputName] = { type:0, value:null }\r\n                }\r\n                \r\n                dom.querySelector(`[id=\"inputs\"]`).appendChild(inputDom.content)                \r\n            }\r\n            let subtractItem = ()=>{\r\n                let inputKeys = Object.keys(blockData.inputs)\r\n                if (inputKeys.length > 0) {\r\n                    let inputData = blockData.inputs[inputKeys[inputKeys.length-1]]\r\n                    if (inputData.value) {\r\n                        deletBlock(inputData.value.data)\r\n                    }\r\n                    dom.querySelector(`[group=\"${inputKeys[inputKeys.length-1]}\"][prentId=\"${blockId}\"]`).remove()\r\n                    delete blockData.inputs[inputKeys[inputKeys.length-1]]\r\n                }\r\n            }\r\n            if (firstTime) {\r\n                debugger\r\n                dom.querySelector(`[id=\"inputs\"]`).innerHTML = ''\r\n                for (let inputName in blockData.inputs) {\r\n                    addItem(inputName,false)\r\n                }                \r\n            }\r\n\r\n            dom.querySelector(`[id=\"add\"]`).onclick = () => {\r\n                addItem(`item_${Object.keys(blockData.inputs).length + 1}`)\r\n            }\r\n            dom.querySelector(`[id=\"subtract\"]`).onclick = (e) => {\r\n                subtractItem()\r\n            }\r\n        }        \r\n    }\r\n\r\n}","import move from './move/move'\r\nimport ifelse from './ifelse/ifelse'\r\nimport start from './start/start'\r\nimport text from './text/text'\r\nimport number from './number/number'\r\nimport equalTo from './equalTo/equalTo'\r\n\r\n\r\n\r\nexport default{\r\n    move,\r\n    ifelse,\r\n    start,\r\n    text,\r\n    number,\r\n    equalTo\r\n}","export default function deepClone(target) {\r\n    const map = new WeakMap()\r\n    \r\n    function isObject(target) {\r\n        return (typeof target === 'object' && target ) || typeof target === 'function'\r\n    }\r\n\r\n    function clone(data) {\r\n        if (!isObject(data)) {\r\n            return data\r\n        }\r\n        if ([Date, RegExp].includes(data.constructor)) {\r\n            return new data.constructor(data)\r\n        }\r\n        if (typeof data === 'function') {\r\n            return new Function('return ' + data.toString())()\r\n        }\r\n        const exist = map.get(data)\r\n        if (exist) {\r\n            return exist\r\n        }\r\n        if (data instanceof Map) {\r\n            const result = new Map()\r\n            map.set(data, result)\r\n            data.forEach((val, key) => {\r\n                if (isObject(val)) {\r\n                    result.set(key, clone(val))\r\n                } else {\r\n                    result.set(key, val)\r\n                }\r\n            })\r\n            return result\r\n        }\r\n        if (data instanceof Set) {\r\n            const result = new Set()\r\n            map.set(data, result)\r\n            data.forEach(val => {\r\n                if (isObject(val)) {\r\n                    result.add(clone(val))\r\n                } else {\r\n                    result.add(val)\r\n                }\r\n            })\r\n            return result\r\n        }\r\n        const keys = Reflect.ownKeys(data)\r\n        const allDesc = Object.getOwnPropertyDescriptors(data)\r\n        const result = Object.create(Object.getPrototypeOf(data), allDesc)\r\n        map.set(data, result)\r\n        keys.forEach(key => {\r\n            const val = data[key]\r\n            if (isObject(val)) {\r\n                result[key] = clone(val)\r\n            } else {\r\n                result[key] = val\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    return clone(target)\r\n}\r\n","import blockStyle from \"./blockStyle/index\";\r\nvar blocksData = {}\r\n\r\nconst compileBlock = (blockData,blocksId)=>{\r\n    let selfBlockStyle =blockStyle[ blockData.type]\r\n    let inputs = {}\r\n    for (const inputkey in blockData.inputs) {\r\n        let inputData = blockData.inputs[inputkey]\r\n        if (inputData.value) {\r\n            inputs[inputkey] = compileBlock(blocksData[inputData.value.data],inputData.value.data,false)\r\n        }else{\r\n            if (inputkey == 'next') {\r\n                inputs[inputkey] = ''\r\n            }else{\r\n                inputs[inputkey] = 'null'\r\n            }\r\n        }\r\n    }\r\n    return selfBlockStyle.compiler(inputs,blockData,document.querySelector(`[blockid=\"${blocksId}\"]`))\r\n}\r\n\r\nconst compile = (blocksDataInput)=>{\r\n    blocksData = blocksDataInput // load data to compile\r\n    let sourceCode = '' \r\n    for (const blocksId in blocksData) {\r\n        let blockData = blocksData[blocksId]\r\n        if (blockStyle[blockData.type].isTopLevel) {\r\n            sourceCode += compileBlock(blockData,blocksId)\r\n        }\r\n    }\r\n    return sourceCode\r\n}\r\n\r\nexport {\r\n    compile\r\n}","import blockStyle from \"../blockStyle\"\r\n\r\nconst saveFile = (blocksData)=>{\r\n    let file = {}\r\n    for (const blockId in blocksData) {\r\n        let blockData = blocksData[blockId]\r\n        let blockDom = document.querySelector(`[blockid=\"${blockId}\"]`)\r\n        console.log(blockDom)\r\n        let selfBlockStyle = blockStyle[blockData.type]\r\n        if (selfBlockStyle.save && selfBlockStyle.save.toFile) {\r\n            file[blockId] = selfBlockStyle.save.toFile(blockData,blockDom)\r\n        }else{\r\n            file[blockId] = blockData\r\n        }\r\n        file[blockId].x = blockDom.style.left\r\n        file[blockId].y = blockDom.style.top\r\n    }\r\n    return file\r\n}\r\n\r\nexport default saveFile","import blockStyle from \"../blockStyle\"\r\nimport { addBlock, addInputBlock,bindEvent } from \"../block\"\r\nlet blocksDataToChange = {}\r\nlet eventList = []\r\n\r\nconst load = (blockId, blocksDataToLoad, dom) => {\r\n    let blockData = blocksDataToLoad[blockId]\r\n    let selfBlockStyle = blockStyle[blockData.type]\r\n    \r\n    dom.style.left = blockData.x\r\n    dom.style.top = blockData.y\r\n\r\n\r\n    delete blockData.x\r\n    delete blockData.y\r\n\r\n    blocksDataToChange[blockId] = blockData\r\n    if (selfBlockStyle.load && selfBlockStyle.load.initDom) {\r\n        selfBlockStyle.load.initDom(blockData,dom,blockId,true)\r\n    }\r\n    for (const inputKey in blockData.inputs) {\r\n        let inputData = blockData.inputs[inputKey]\r\n        if (inputData.value) {\r\n            let child = addInputBlock(\r\n                blocksDataToLoad[inputData.value.data].type,\r\n                inputData.value.data\r\n            )\r\n            //setDragOut = (e, selfBlockDom, selfBlockId, prentId, targetBlockInputIndex)\r\n            eventList.push({\r\n                selfBlockDom:child,\r\n                selfBlockId:inputData.value.data,\r\n                prentId:blockId,\r\n                targetBlockInputIndex:inputKey\r\n\r\n\r\n            })\r\n\r\n            dom.querySelector(`[inputid=\"${inputKey}\"]`).appendChild(\r\n            load(\r\n                    inputData.value.data,\r\n                    blocksDataToLoad, \r\n                    child\r\n                )\r\n            )\r\n            debugger\r\n        }\r\n    }\r\n    return dom\r\n}\r\n\r\nconst loadFile = (blocksDataToLoad,blocksData) => {\r\n    blocksData = {}\r\n    document.getElementById('app').innerHTML = ''\r\n    blocksDataToChange = {}\r\n    for (const blockId in blocksDataToLoad) {\r\n        console.log(\"sss\", blocksDataToLoad[blockId])\r\n        const blockData = blocksDataToLoad[blockId]\r\n        if (!blockData.prent) {\r\n            debugger\r\n            eventList = []\r\n            bindEvent(load(blockId, blocksDataToLoad, addBlock(blockData.type,false,blockId)),eventList,blockId)\r\n            debugger\r\n        }\r\n    }\r\n}\r\n\r\nexport default loadFile","import {\r\n\tdragElement\r\n} from \"./drag\";\r\nimport blockStyle from \"./blockStyle/index\";\r\nimport deepClone from './deepClone'\r\nimport {\r\n\tzoom\r\n} from \"./zoom\";\r\nimport * as compiler from './compiler'\r\nimport * as file from './file'\r\n\r\n/** @constant { Number } blockMinSpace 积木连接最小距离*/\r\nconst blockMinSpace = 20\r\n/** @constant { HTMLElement } codeSpace 积木编程区 html 对象 */\r\nvar codeSpace = null;\r\n/** @constant { object } blocksData 存储积木数据 */\r\nvar blocksData = {};\r\n/** @constant { object } menu 存储菜单数据 */\r\nvar menu = {};\r\n/** @constant { HTMLElement } menuDom 菜单 html 对象 */\r\nvar menuDom = null;\r\nvar porDom = null;\r\n/**\r\n * @function getMinChild 获取积木输入框的最子元素\r\n * @param { Number } targetBlockId 积木Id \r\n * @param { String } inputId 输入名\r\n * @returns { Number } 最子元素Id\r\n */\r\nexport const getMinChild = (targetBlockId, inputId) => {\r\n\tlet child = targetBlockId\r\n\tif (!blocksData[child].inputs[inputId]) {\r\n\t\treturn targetBlockId\r\n\t}\r\n\twhile (blocksData[child].inputs[inputId].value) {\r\n\t\tchild = blocksData[child].inputs[inputId].value.data\r\n\t}\r\n\treturn Number(child)\r\n}\r\n\r\n/**\r\n * @function setDragOut 设置积木从父积木里拖出来事件\r\n * @param { Number } selfBlockId 积木 Id \r\n * @param { String } prentId 父积木 Id\r\n * @param { String } targetBlockInputIndex 输入名\r\n */\r\nexport const setDragOut = (e, selfBlockId, prentId, targetBlockInputIndex) => {\r\n\tif (e.target.getAttribute('blockid') != selfBlockId && e.target.getAttribute('dragId') != selfBlockId) {\r\n\t\treturn true;\r\n\t}\r\n\te = e || window.e;\r\n\te.preventDefault();\r\n\tif (e.button == 2) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tdelete blocksData[selfBlockId].prent\r\n\tlet selfBlockDom = codeSpace.querySelector(`[blockid=\"${selfBlockId}\"]`)\r\n\tblocksData[prentId].inputs[targetBlockInputIndex].value = null\r\n\tselfBlockDom.style.top = setPostiton(selfBlockDom, 'y') + \"px\";\r\n\tselfBlockDom.style.left = setPostiton(selfBlockDom, 'x') + \"px\";\r\n\tselfBlockDom.setAttribute('class', 'block')\r\n\tcodeSpace.appendChild(selfBlockDom)\r\n\tdragElement(selfBlockDom, connectBlocks, e)\r\n}\r\n\r\n/**\r\n * @function setContext 设置积木右键菜单事件\r\n * @param { Number } e 事件对象\r\n * @param { String } domId 积木 Id\r\n */\r\nexport const setContext = (e, domId) => {\r\n\te = e || window.e;\r\n\te.preventDefault();\r\n\tif (e.target.getAttribute('blockid') != domId && e.target.getAttribute('dragId') != domId) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t//let menuDom = menuDom//document.getElementById('menu')\r\n\tmenuDom.style.display = 'block'\r\n\tmenuDom.style.top = (e.clientY + 5) + \"px\";\r\n\tmenuDom.style.left = (e.clientX + 10) + \"px\";\r\n\tmenu.open = true\r\n\tmenu.target = {\r\n\t\ttype: 1,\r\n\t\tdata: String(domId)\r\n\t}\r\n}\r\n\r\n/**\r\n * @function connectBlocks 检查积木可否连接其他积木并连接\r\n * @param { Number } dragBlockId 积木Id\r\n */\r\nexport const connectBlocks = (dragBlockId, connect = true) => {\r\n\tif (connect) {\r\n\t\tporDom.remove()\r\n\t}\r\n\tlet NowCanConnectBlocks = []\r\n\tlet dragBlockDom = getBlockById(dragBlockId)\r\n\tfor (let targetBlockId in blocksData) {\r\n\t\tlet targetBlockData = blocksData[targetBlockId]\r\n\t\tif (targetBlockId == dragBlockId) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tfor (const dragBlockInputId in blocksData[dragBlockId].inputs) {\r\n\t\t\tif (targetBlockData.topOnly && blocksData[dragBlockId].inputs[dragBlockInputId].type == 1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (blocksData[dragBlockId].inputs[dragBlockInputId].type != 1 || blocksData[targetBlockId].prent) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (dragBlockInputId != 'next' && blocksData[dragBlockId].inputs[dragBlockInputId].value) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tlet targetBlockDom = getBlockById(targetBlockId)\r\n\t\t\tlet dragBlockInputDom = document.querySelector(`[prentId=\"${dragBlockId}\"][inputId=\"${dragBlockInputId}\"]`)\r\n\t\t\tlet distanceX = Math.abs(targetBlockDom.getBoundingClientRect()\r\n\t\t\t\t.left - dragBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.left)\r\n\t\t\tlet distanceY = Math.abs(targetBlockDom.getBoundingClientRect()\r\n\t\t\t\t.top - dragBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.top)\r\n\t\t\tlet type = 1\r\n\r\n\t\t\tif (distanceY < blockMinSpace && distanceX < blockMinSpace) {\r\n\t\t\t\tNowCanConnectBlocks.push({\r\n\t\t\t\t\tdistance: distanceX + distanceY,\r\n\t\t\t\t\ttargetBlockId,\r\n\t\t\t\t\ttargetBlockDom,\r\n\t\t\t\t\tdragBlockInputId,\r\n\t\t\t\t\ttype\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const targetBlockInputIndex in targetBlockData.inputs) {\r\n\t\t\tif (!blocksData[dragBlockId].defaultInput && targetBlockData.inputs[targetBlockInputIndex].type == 1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (blocksData[dragBlockId].topOnly && targetBlockData.inputs[targetBlockInputIndex].type == 1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\tlet targetBlockInputDom = document.querySelector(`[prentId=\"${targetBlockId}\"][inputId=\"${targetBlockInputIndex}\"]`)\r\n\t\t\tlet distanceX = Math.abs(targetBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.left - dragBlockDom.getBoundingClientRect()\r\n\t\t\t\t.left)\r\n\t\t\tlet distanceY = Math.abs(targetBlockInputDom.getBoundingClientRect()\r\n\t\t\t\t.top - dragBlockDom.getBoundingClientRect()\r\n\t\t\t\t.top)\r\n\t\t\tif (distanceX < blockMinSpace && distanceY < blockMinSpace) {\r\n\t\t\t\tNowCanConnectBlocks.push({\r\n\t\t\t\t\tdistance: distanceX + distanceY,\r\n\t\t\t\t\ttargetBlockId,\r\n\t\t\t\t\ttargetBlockInputIndex,\r\n\t\t\t\t\ttargetBlockInputDom,\r\n\t\t\t\t\ttype: 0\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (NowCanConnectBlocks.length == 0) {\r\n\t\tporDom.remove()\r\n\t\treturn null\r\n\t}\r\n\tNowCanConnectBlocks.sort((a, b) => {\r\n\t\treturn a.distance - b.distance\r\n\t});\r\n\tlet NowCanConnectBlock = NowCanConnectBlocks[0]\r\n\t//console.log(\"connect\",NowCanConnectBlock)\r\n\t/*if (! connect) {\r\n\t    return NowCanConnectBlock\r\n\t}*/\r\n\r\n\tif (NowCanConnectBlock.type == 0) {\r\n\t\tlet {\r\n\t\t\ttargetBlockId,\r\n\t\t\ttargetBlockInputIndex,\r\n\t\t\ttargetBlockInputDom,\r\n\t\t} = NowCanConnectBlock\r\n\r\n\t\tif (blocksData[targetBlockId].inputs[targetBlockInputIndex].value) { // 输入口已有积木\r\n\t\t\tlet oldBlockId = blocksData[targetBlockId].inputs[targetBlockInputIndex].value.data // 已有积木的ID\r\n\t\t\tlet oldBlockDom = getBlockById(oldBlockId) // 已有积木的dom\r\n\t\t\tlet minChildId = getMinChild(dragBlockId, 'next') // 拖动积木的最子积木\r\n\r\n\t\t\tif (targetBlockInputIndex == 'next') {\r\n\t\t\t\tlet defaultInput = blocksData[dragBlockId].defaultInput // 拖动积木的默认输入口\r\n\r\n\t\t\t\tif (!connect) {\r\n\t\t\t\t\ttargetBlockInputDom.insertBefore(porDom, targetBlockInputDom.childNodes[0])\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (defaultInput != 'next' && !blocksData[dragBlockId].inputs[defaultInput].value) {\r\n\t\t\t\t\t// 默认输入口无积木\r\n\t\t\t\t\tdocument.querySelector(`[prentId=\"${dragBlockId}\"][inputId=\"${defaultInput}\"]`)\r\n\t\t\t\t\t\t.appendChild(oldBlockDom)\r\n\t\t\t\t\tblocksData[dragBlockId].inputs[defaultInput].value = {\r\n\t\t\t\t\t\ttype: 1,\r\n\t\t\t\t\t\tdata: oldBlockId\r\n\t\t\t\t\t}\r\n\t\t\t\t\tblocksData[oldBlockId].prent = {\r\n\t\t\t\t\t\tinputId: defaultInput,\r\n\t\t\t\t\t\tblockId: dragBlockId\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldBlockDom.onmousedown = (e) => {\r\n\t\t\t\t\t\tsetDragOut(e, oldBlockId, dragBlockId, defaultInput)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 默认输入口有积木\r\n\t\t\t\t\tdocument.querySelector(`[prentId=\"${minChildId}\"][inputId=\"next\"]`)\r\n\t\t\t\t\t\t.appendChild(oldBlockDom)\r\n\t\t\t\t\tblocksData[minChildId].inputs.next.value = {\r\n\t\t\t\t\t\ttype: 1,\r\n\t\t\t\t\t\tdata: oldBlockId\r\n\t\t\t\t\t}\r\n\t\t\t\t\tblocksData[oldBlockId].prent = {\r\n\t\t\t\t\t\tinputId: 'next',\r\n\t\t\t\t\t\tblockId: minChildId\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldBlockDom.onmousedown = (e) => {\r\n\t\t\t\t\t\tsetDragOut(e, oldBlockId, minChildId, 'next')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (blocksData[oldBlockId].defaultInput) {\r\n\t\t\t\t\tif (blocksData[dragBlockId].defaultInput) {\r\n\r\n\t\t\t\t\t\tif (!connect) {\r\n\t\t\t\t\t\t\ttargetBlockInputDom.insertBefore(porDom, targetBlockInputDom.childNodes[0])\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet defaultInput = blocksData[dragBlockId].defaultInput\r\n\t\t\t\t\t\tlet prentId;\r\n\t\t\t\t\t\tif (defaultInput == 'next') {\r\n\t\t\t\t\t\t\tprentId = minChildId //dragBlockId\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (blocksData[dragBlockId].inputs[defaultInput].value) {\r\n\t\t\t\t\t\t\t\t// 默认输入有积木\r\n\t\t\t\t\t\t\t\tprentId = minChildId\r\n\t\t\t\t\t\t\t\tdefaultInput = 'next'\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// 默认输入唔积木\r\n\t\t\t\t\t\t\t\tprentId = dragBlockId\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdocument.querySelector(`[prentId=\"${prentId}\"][inputId=\"${defaultInput}\"]`)\r\n\t\t\t\t\t\t\t.appendChild(oldBlockDom)\r\n\r\n\t\t\t\t\t\tblocksData[prentId].inputs[defaultInput].value = {\r\n\t\t\t\t\t\t\tdata: oldBlockId,\r\n\t\t\t\t\t\t\ttype: 1\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tblocksData[oldBlockId].prent = {\r\n\t\t\t\t\t\t\tinputId: defaultInput,\r\n\t\t\t\t\t\t\tblockId: prentId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toldBlockDom.onmousedown = (e) => {\r\n\t\t\t\t\t\t\tsetDragOut(e, oldBlockId, prentId, defaultInput)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!connect) {\r\n\t\t\t\t\t\t\ttargetBlockInputDom.append(porDom)\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toldBlockDom.style.top = setPostiton(oldBlockDom, 'y') + 20 + \"px\";\r\n\t\t\t\t\t\toldBlockDom.style.left = setPostiton(oldBlockDom, 'x') + 20 + \"px\";\r\n\t\t\t\t\t\tcodeSpace.appendChild(oldBlockDom)\r\n\t\t\t\t\t\tdelete blocksData[oldBlockId].prent\r\n\t\t\t\t\t\toldBlockDom.setAttribute('class', 'block')\r\n\t\t\t\t\t\tdragElement(oldBlockDom, connectBlocks)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!connect) {\r\n\t\t\t\t\t\ttargetBlockInputDom.append(porDom)\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldBlockDom.style.top = setPostiton(oldBlockDom, 'y') + 20 + \"px\";\r\n\t\t\t\t\toldBlockDom.style.left = setPostiton(oldBlockDom, 'x') + 20 + \"px\";\r\n\t\t\t\t\tcodeSpace.appendChild(oldBlockDom)\r\n\t\t\t\t\tdelete blocksData[oldBlockId].prent\r\n\t\t\t\t\toldBlockDom.setAttribute('class', 'block')\r\n\t\t\t\t\tdragElement(oldBlockDom, connectBlocks)\r\n\t\t\t\t}\r\n\t\t\t\tdebugger\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tdebugger\r\n\t\tif (!connect) {\r\n\t\t\ttargetBlockInputDom.append(porDom)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tblocksData[targetBlockId].inputs[targetBlockInputIndex].value = {\r\n\t\t\ttype: 1,\r\n\t\t\tdata: dragBlockId\r\n\t\t}\r\n\t\tblocksData[dragBlockId].prent = {\r\n\t\t\tblockId: targetBlockId,\r\n\t\t\tinputId: targetBlockInputIndex\r\n\t\t}\r\n\r\n\t\ttargetBlockInputDom.appendChild(dragBlockDom)\r\n\t\tdragBlockDom.setAttribute('class', 'block-input')\r\n\t\tdragBlockDom.onmousedown = (e) => {\r\n\t\t\tsetDragOut(e, dragBlockId, targetBlockId, targetBlockInputIndex)\r\n\t\t}\r\n\t} else if (NowCanConnectBlock.type == 1) {\r\n\t\tlet {\r\n\t\t\ttargetBlockId,\r\n\t\t\ttargetBlockDom,\r\n\t\t\tdragBlockInputId\r\n\t\t} = NowCanConnectBlock\r\n\t\tlet dragBlockInputDom = document.querySelector(`[prentId=\"${dragBlockId}\"][inputId=\"${dragBlockInputId}\"]`)\r\n\t\tif (!connect) {\r\n\t\t\tdragBlockInputDom.append(porDom)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tdragBlockInputDom.append(targetBlockDom)\r\n\r\n\r\n\t\tblocksData[targetBlockId].prent = {\r\n\t\t\tblockId: dragBlockId,\r\n\t\t\tinputId: dragBlockInputId\r\n\t\t}\r\n\t\tblocksData[dragBlockId].inputs[dragBlockInputId].value = {\r\n\t\t\ttype: 1,\r\n\t\t\tdata: targetBlockId\r\n\t\t}\r\n\t\ttargetBlockDom.setAttribute('class', 'block-input')\r\n\t\ttargetBlockDom.onmousedown = (e) => {\r\n\t\t\tsetDragOut(e, targetBlockId, dragBlockId, dragBlockInputId)\r\n\t\t}\r\n\t}\r\n\r\n\treturn null\r\n}\r\n/**\r\n * @function createBlockDomById 创建一个积木\r\n * @param { String } type 积木类型\r\n * @param { Number } dragBlockId 积木Id\r\n */\r\nconst createBlockDomById = (type, id) => {\r\n\tlet dom = document.createElement(\"div\");\r\n\tdom.setAttribute('blockId', `${id}`)\r\n\tdom.setAttribute('class', 'block')\r\n\tdom.innerHTML = blockStyle[type].html(id)\r\n\treturn dom\r\n}\r\n/**\r\n * 创建一个积木\r\n * @function createBlockDom 创建一个积木\r\n * @param { String } type 积木类型\r\n * @return { HTMLDivElement } 创建积木\r\n */\r\nconst createBlockDom = (type, id = Object.keys(blocksData)\r\n\t.length) => {\r\n\tlet dom = document.createElement(\"div\");\r\n\tdom.setAttribute('blockId', `${id}`)\r\n\tdom.setAttribute('class', 'block')\r\n\tdom.innerHTML = blockStyle[type].html(id)\r\n\treturn dom\r\n}\r\n\r\n/**\r\n * @function addInputBlock 创建一个有父的积木\r\n * @param { String } type 积木类型\r\n * @param { String } id 积木 id\r\n */\r\nexport const addInputBlock = (type, id = Object.keys(blocksData)\r\n\t.length) => {\r\n\tlet dom = createBlockDom(type, id)\r\n\tdom.setAttribute('class', 'input-block')\r\n\treturn dom\r\n}\r\n\r\n/**\r\n * @function addBlock 创建一个积木\r\n * @param { String } type 积木类型\r\n * @param { boolean } changeBlocksData 是否修改\r\n * @param { String } id 积木 id\r\n */\r\nexport const addBlock = (type, changeBlocksData = true, id) => {\r\n\r\n\tlet dom;\r\n\tif (changeBlocksData) {\r\n\t\tdom = createBlockDom(type)\r\n\t} else {\r\n\t\tdom = createBlockDom(type, id)\r\n\t}\r\n\tcodeSpace.appendChild(dom);\r\n\tif (changeBlocksData) {\r\n\t\tdragElement(dom, connectBlocks)\r\n\t\tlet domId = Object.keys(blocksData)\r\n\t\t\t.length\r\n\t\tdom.oncontextmenu = (e) => {\r\n\t\t\tsetContext(e, domId)\r\n\t\t}\r\n\r\n\t\tblocksData[domId] = {\r\n\t\t\ttype,\r\n\t\t\tinputs: blockStyle[type].inputs(),\r\n\t\t\tdefaultInput: blockStyle[type].defaultInput,\r\n\t\t\ttopOnly: blockStyle[type].topOnly,\r\n\t\t}\r\n        if (blockStyle[type].initialSelfData) {\r\n            blocksData[domId].self = blockStyle[type].initialSelfData\r\n        }else{\r\n            blocksData[domId].self = {}\r\n        }\r\n\t\tinitDom(dom, domId, type, true)\r\n\t}\r\n\treturn dom\r\n}\r\n\r\nconst initDom = (dom, domId, type) => {\r\n\tif (blockStyle[type].load && blockStyle[type].load.initDom) {\r\n\t\tblockStyle[type].load.initDom(blocksData[domId], dom, domId, false)\r\n\t}\r\n}\r\n\r\n/**\r\n * @function getAllChildBlock 获取该积木的所有子\r\n * @param { Number } tagetBlockId 积木id\r\n * @return { number[] } 子积木id\r\n */\r\nexport const getAllChildBlock = (tagetBlockId) => {\r\n\tlet res = []\r\n\tfor (const inputKey in blocksData[tagetBlockId].inputs) {\r\n\t\tlet inputData = blocksData[tagetBlockId].inputs[inputKey]\r\n\t\tif (inputData.value) {\r\n\t\t\tif (inputData.value) {\r\n\r\n\t\t\t\tres.push(inputData.value.data)\r\n\t\t\t\tres = res.concat(getAllChildBlock(inputData.value.data))\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn res\r\n}\r\n\r\n/**\r\n * @function deletBlock 删除积木\r\n * @param { Number } deletBlock 积木 id\r\n */\r\nexport const deletBlock = (targetBlockId) => {\r\n\tgetBlockById(targetBlockId)\r\n\t\t.remove()\r\n\r\n\tif (blocksData[targetBlockId].prent) {\r\n\t\tblocksData[blocksData[targetBlockId].prent.blockId].inputs[blocksData[targetBlockId].prent.inputId].value = null\r\n\t}\r\n\r\n\tlet data = getAllChildBlock(targetBlockId)\r\n\tfor (const delBlockId of data) {\r\n\t\tdelete blocksData[delBlockId]\r\n\t}\r\n\tdelete blocksData[targetBlockId]\r\n}\r\n\r\n/**\r\n * @function setPostiton 通过在页面的绝对位置设置位置偏移\r\n * @param { Number } deletBlock 积木 id\r\n * @param { String } attribute 方向\r\n * @param { HTMLElement } dom 积木对象\r\n */\r\nconst setPostiton = (dom, attribute) => {\r\n\tif (attribute == 'x') {\r\n\t\treturn dom.getBoundingClientRect()\r\n\t\t\t.x - codeSpace.getBoundingClientRect()\r\n\t\t\t.x + document.getElementById('zoom')\r\n\t\t\t.scrollLeft / zoom\r\n\t} else {\r\n\t\treturn dom.getBoundingClientRect()\r\n\t\t\t.y - codeSpace.getBoundingClientRect()\r\n\t\t\t.y + document.getElementById('zoom')\r\n\t\t\t.scrollTop / zoom\r\n\t}\r\n}\r\n/**\r\n * @function copyBlock 复制积木\r\n * @param { Number } targetBlockId 积木 id\r\n */\r\nconst copyBlock = (targetBlockId) => {\r\n\tlet data = getAllChildBlock(targetBlockId)\r\n\tlet baseId = Number(Object.keys(blocksData)[Object.keys(blocksData)\r\n\t\t.length - 1]) + 1 //Object.keys(blocksData).length+1\r\n\tdata.unshift(targetBlockId)\r\n\tlet targetBlockToCopy = document.querySelector(`[blockid=\"${targetBlockId}\"]`)\r\n\tlet newBlockDom = targetBlockToCopy.cloneNode(true)\r\n\r\n\tnewBlockDom.style.left = setPostiton(targetBlockToCopy, 'x') + 10 + 'px'\r\n\tnewBlockDom.style.top = setPostiton(targetBlockToCopy, 'y') + 10 + 'px'\r\n\r\n\tcodeSpace.appendChild(newBlockDom)\r\n\tfor (const blockIdToCopy of data) {\r\n\t\tlet toCopyData = blocksData[blockIdToCopy]\r\n\t\tlet newData = deepClone(toCopyData)\r\n\r\n\r\n\t\tblocksData[String(Number(blockIdToCopy) + baseId)] = newData\r\n\t\t//blocksData.blockId = String(Number(blockIdToCopy) + baseId)\r\n\t\tif (blockStyle[toCopyData.type].save && blockStyle[toCopyData.type].save.toFile) {\r\n\t\t\tblockStyle[toCopyData.type].save.toFile(newData, newBlockDom)\r\n\t\t}\r\n\t\tlet newBlock = blocksData[String(Number(blockIdToCopy) + baseId)]\r\n\r\n\t\tlet domToQuery = document.createElement(\"div\");\r\n\t\tdomToQuery.appendChild(newBlockDom.cloneNode(true))\r\n\r\n\t\tlet change = (Attribute, AttributeName, callBack = () => {}) => {\r\n\t\t\tlet newBlockDomToChange = newBlockDom.querySelectorAll(Attribute)[0]\r\n\t\t\tif (!newBlockDomToChange) {\r\n\t\t\t\tnewBlockDomToChange = newBlockDom\r\n\t\t\t}\r\n\t\t\tnewBlockDomToChange.setAttribute(AttributeName, String(Number(blockIdToCopy) + baseId))\r\n\t\t\tcallBack(newBlockDomToChange)\r\n\t\t}\r\n\t\tlet changeMultiple = (Attribute, AttributeName) => {\r\n\t\t\tlet newBlockDomToChanges = newBlockDom.querySelectorAll(Attribute)\r\n\t\t\tfor (let newBlockDomToChange of newBlockDomToChanges) {\r\n\t\t\t\tnewBlockDomToChange.setAttribute(AttributeName, String(Number(blockIdToCopy) + baseId))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newBlock.prent) {\r\n\t\t\tblocksData[String(Number(blockIdToCopy) + baseId)].prent.blockId = String(Number(blocksData[String(Number(blockIdToCopy) + baseId)].prent.blockId) + baseId)\r\n\t\t}\r\n\r\n\t\tchange(`[blockid=\"${blockIdToCopy}\"]`, 'blockid', (newBlockDomToChange) => {\r\n\t\t\tdebugger\r\n\t\t\tlet data = blocksData[String(Number(blockIdToCopy) + baseId)]\r\n\r\n\t\t\tif (blockIdToCopy == targetBlockId) {\r\n\t\t\t\tnewBlockDomToChange.setAttribute('class', 'block')\r\n\t\t\t\tdragElement(newBlockDomToChange, connectBlocks)\r\n\t\t\t} else {\r\n\t\t\t\tnewBlockDomToChange.onmousedown = (e) => {\r\n\t\t\t\t\tsetDragOut(e, String(Number(blockIdToCopy) + baseId), data.prent.blockId, data.prent.inputId)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//console.log(newBlockDomToChange,String(Number(blockIdToCopy) + baseId),data.type)\r\n\t\t\tinitDom(newBlockDomToChange, String(Number(blockIdToCopy) + baseId), data.type, false)\r\n\t\t\tnewBlockDomToChange.oncontextmenu = (e) => {\r\n\t\t\t\tsetContext(e, String(Number(blockIdToCopy) + baseId))\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tchangeMultiple(`[dragid=\"${blockIdToCopy}\"]`, 'dragid')\r\n\t\tfor (const inputKey in newBlock.inputs) {\r\n\t\t\tchangeMultiple(`[prentid=\"${blockIdToCopy}\"][inputId=\"${inputKey}\"]`, 'prentid')\r\n\t\t\tchangeMultiple(`[prentid=\"${blockIdToCopy}\"][group=\"${inputKey}\"]`, 'prentid')\r\n\r\n\t\t\tif (newBlock.inputs[inputKey].value) {\r\n\t\t\t\tnewBlock.inputs[inputKey].value.data = String(Number(newBlock.inputs[inputKey].value.data) + baseId)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * @function bindEvent 绑定事件\r\n * @param { object } eventList 事件\r\n * @param { Number } blockId 积木 id\r\n * @param { HTMLElement } dom 积木对象\r\n */\r\nexport const bindEvent = (dom, eventList, blockId) => {\r\n\t// only for toplevel\r\n\tdragElement(dom, connectBlocks)\r\n\tdom.oncontextmenu = (e) => {\r\n\t\tsetContext(e, blockId)\r\n\t}\r\n\tfor (const aevent of eventList) {\r\n\t\taevent.selfBlockDom.onmousedown = (e) => {\r\n\t\t\tsetDragOut(e, aevent.selfBlockId, aevent.prentId, aevent.targetBlockInputIndex)\r\n\t\t}\r\n\t\taevent.selfBlockDom.oncontextmenu = (e) => {\r\n\t\t\tsetContext(e, aevent.selfBlockId)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @function getBlockById 通过积木Id 获取积木元素\r\n * @param { Number } tid 积木 id\r\n * @return { HTMLElement } 积木元素\r\n */\r\nconst getBlockById = (tid) => {\r\n\treturn document.querySelector(`[blockId=\"${tid}\"]`)\r\n}\r\n\r\n/**\r\n * @function closeMenu 关闭菜单\r\n */\r\nconst closeMenu = () => {\r\n\tmenuDom.style.display = 'none'\r\n\tmenu.open = false\r\n}\r\n\r\n/**\r\n * @function init 初始化\r\n * @param { HTMLElement } codeSpaceDom 工作区元素\r\n */\r\nexport const init = (codeSpaceDom) => {\r\n\tmenuDom = document.getElementById('menu')\r\n\tcodeSpace = codeSpaceDom //document.getElementById('app')\r\n\tblocksData = {}\r\n\tmenu = {}\r\n\tporDom = document.getElementById('porDom');\r\n\tporDom.remove()\r\n\tcodeSpace.onmousedown = (e) => {\r\n\t\tif (e.target.getAttribute('id') == 'menuItem') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcloseMenu()\r\n\t}\r\n\r\n\tdocument.getElementById(\"menuCopy\")\r\n\t\t.addEventListener(\"click\", () => {\r\n\t\t\tcopyBlock(menu.target.data)\r\n\t\t\tcloseMenu()\r\n\t\t})\r\n\tdocument.getElementById(\"menuDelet\")\r\n\t\t.addEventListener(\"click\", () => {\r\n\t\t\tdeletBlock(menu.target.data)\r\n\t\t\tcloseMenu()\r\n\t\t})\r\n}\r\n\r\n/**\r\n * @exports loadFile\r\n */\r\nexport const loadFile = (projectJson) => {\r\n\tfile.loadFile(projectJson, blocksData)\r\n}\r\n/**\r\n * @exports saveFile\r\n */\r\nexport const saveFile = () => {\r\n\treturn file.saveFile(blocksData)\r\n}\r\n/**\r\n * @exports compile\r\n */\r\nexport const compile = () => {\r\n\treturn compiler.compile(blocksData)\r\n}\r\n//"],"names":["zoom","display","zoomOut","zoomIn","codeSpace","zoomSpace","dragElement","elmnt","dragOver","event","id","offset","dragMouseDown","e","closeDragElement","elementDrag","html$5","move","blockId","html","inputs","blockData","html$4","ifelse","html$3","start","html$2","text","dom","html$1","number","inputHtml","equalTo","arr","item","firstTime","addItem","inputName","change","inputDom","subtractItem","inputKeys","inputData","deletBlock","blockStyle","deepClone","target","map","isObject","clone","data","exist","result","val","key","keys","allDesc","blocksData","compileBlock","blocksId","selfBlockStyle","inputkey","compile","blocksDataInput","sourceCode","saveFile","file","blockDom","blocksDataToChange","eventList","load","blocksDataToLoad","inputKey","child","addInputBlock","loadFile","bindEvent","addBlock","blockMinSpace","menu","menuDom","porDom","getMinChild","targetBlockId","inputId","setDragOut","selfBlockId","prentId","targetBlockInputIndex","selfBlockDom","setPostiton","connectBlocks","setContext","domId","dragBlockId","connect","NowCanConnectBlocks","dragBlockDom","getBlockById","targetBlockData","dragBlockInputId","targetBlockDom","dragBlockInputDom","distanceX","distanceY","type","targetBlockInputDom","a","b","NowCanConnectBlock","oldBlockId","oldBlockDom","minChildId","defaultInput","createBlockDom","changeBlocksData","initDom","getAllChildBlock","tagetBlockId","res","delBlockId","attribute","copyBlock","baseId","targetBlockToCopy","newBlockDom","blockIdToCopy","toCopyData","newData","newBlock","Attribute","AttributeName","callBack","newBlockDomToChange","changeMultiple","newBlockDomToChanges","aevent","tid","closeMenu","init","codeSpaceDom","projectJson","file.loadFile","file.saveFile","compiler.compile"],"mappings":"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"}